<?php
/**
 * Created by PhpStorm.
 * User: Jahongir
 * Date: 26.09.2019
 * Time: 12:05
 */
namespace app\controllers;
use app\models\ProductModel;
use app\models\Test;
use app\models\User;
use yii\base\InvalidArgumentException;
use yii\web\Controller;
use Yii;
use yii\web\Response;

class AuthController extends Controller {

    public function beforeAction($action)
    {
        Yii::$app->request->enableCsrfValidation = false;
        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }

    /**
     * Login action.
     *
     * @return Response|string
     */
    public function actionLogin()
    {
        if (!Yii::$app->user->isGuest) {
            return $this->goHome();
        }

        $model = new LoginForm();
        if ($model->load(Yii::$app->request->post()) && $model->login()) {
            return $this->goBack();
        }

        $model->password = '';
        return $this->render('login', [
            'model' => $model,
        ]);
    }

    /**
     * Logout action.
     *
     * @return Response
     */
    public function actionLogout()
    {
        Yii::$app->user->logout();

        return $this->goHome();
    }


    public function actionTest($id = null)
    {
        Yii::$app->response->format = Response::FORMAT_JSON;
        if (Yii::$app->request->isGet) {
            if ($id !== null) {
                $model = Test::findOne(['id' => $id]);
                return $model;
            }
            $model = Test::find()->all();
            return $model;
        }
        if (Yii::$app->request->isPost) {
            $model = new Test();
            if ($model->load(Yii::$app->getRequest()->getBodyParams(), '') && $model->validate()) {
                $model->save();
                return ['status' => 'ok'];
            } else {
                return ['status' => 'error', 'messages' => $model->getErrors()];
            }
        }
        if (Yii::$app->request->isPut) {
            if (!is_numeric($id)) {
                throw new InvalidArgumentException('faqat raqam yuboring');
//                throw new MethodNotAllowedHttpException('Please use int id');
            }
            $have= Test::findOne(['id'=>$id]);
            if($have===null)
            {
                throw new InvalidArgumentException("bunaqa id yo'q");
            }
            $model = Test::findone(['id' => $id]);
//            var_dump($model);
            if ($model->load(Yii::$app->getRequest()->getBodyParams(), '') && $model->validate()) {
                $model->save();
                return ['status' => 'ok'];
            }
            else
                return['status' => "error", 'message' => $model->getErrors()];

        }
        if(Yii::$app->request->isDelete){
            if(!is_numeric($id)){
                throw new InvalidArgumentException();
            }
            $model = Test::findOne(['id'=> $id]);
            if($model->delete())
            return ['status'=> 'deleted'];
            else
                return ['status'=>'error','message' => $model->getErrors()];

        }
    }

    /**
     * @return array|\yii\db\ActiveRecord[]
     */
    public function actionGetNews($id=null)
    {
        if(Yii::$app->request->isGet) {
            Yii::$app->response->format = Response::FORMAT_JSON;
            if (!is_numeric($id))
                throw new InvalidArgumentException();
            if ($id !== null) {
                    $model = ProductModel::findOne(['id'=>$id]);
                    return $model;
            }

            $model = ProductModel::find()->all();
            return $model;
        }
        if(Yii::$app->request->isPost) {
            Yii::$app->response->format = Response::FORMAT_JSON;
            $model=new ProductModel();
            if($model->load(Yii::$app->getRequest()->getBodyParams(), '') && $model->validate()){
                $model->save();

                return ['status' => 'ok'];
            } else {
                return ['status' => 'error', 'messages' => $model->errors];
            }

        }
    }

    /**
     * @param null $id
     * @return User|array|\yii\db\ActiveRecord[]|null
     */
    public function actionGetUser($id=null){
        Yii::$app->response->format = Response::FORMAT_JSON;
        if (!is_numeric($id)) {
            throw new InvalidArgumentException();
        }
            if(!$id==null) {
                $model = User::findOne(['id' => $id]);
                return $model;
            }
            else {
                $model = User::find()->all();
                return $model;
            }
    }
    public function actionCreateUser(){
        Yii::$app->response->format = Response::FORMAT_JSON;
        if(Yii::$app->request->isPost){
            $model=new User();
            if($model->load(Yii::$app->getRequest()->getBodyParams(), '') && $model->validate()){
                $model->save();

                return ['status' => 'ok'];
            } else {
                return ['status' => 'error', 'messages' => $model->errors];
            }
        }
    }


}
